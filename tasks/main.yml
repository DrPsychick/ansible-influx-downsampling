---

- name: Set variables
  set_fact:
    ifx_start: "{{ lookup('pipe', 'date +%s') }}"
    username: "{{ ansible_influx_user|default('') }}"
    password: "{{ ansible_influx_pass|default('') }}"

- name: Get databases
  uri:
    url: "{{ ansible_influx_url }}/query"
    method: POST
    body: "q=SHOW DATABASES"
    return_content: yes
    url_username: "{{ username }}"
    url_password: "{{ password }}"
  register: ansible_influx_dbs
  changed_when: false
  failed_when: ansible_influx_dbs.status != 200 or (ansible_influx_dbs.rc|default(0) == 1)
    or (ansible_influx_dbs.json is defined and ansible_influx_dbs.json.results[0].error is defined)

- name: Set facts
  set_fact:
    ifx_dbs: "{{ ansible_influx_dbs.json.results
      |selectattr('series','defined')|map(attribute='series')|flatten
      |map(attribute='values')|flatten }}"
    ansible_influx_queries: "{{ ansible_influx_queries|combine(my_ansible_influx_queries|default({})) }}"
    recreate_cqs: "{{ recreate_cqs|default(false) }}"

# needed to check if RP needs to be created
- name: Show continuous queries
  uri:
    url: "{{ ansible_influx_url }}/query"
    method: POST
    body: "q=SHOW CONTINUOUS QUERIES"
    return_content: yes
    url_username: "{{ username }}"
    url_password: "{{ password }}"
  register: ansible_influx_cqs
  changed_when: false
  failed_when: (ansible_influx_cqs.rc|default(0) == 1)
    or (ansible_influx_cqs.json is defined and ansible_influx_cqs.json.results[0].error is defined)

- name: Set facts
  set_fact:
    ifx_cqs: "{{ ansible_influx_cqs.json.results
      |selectattr('series', 'defined')|map(attribute='series')|flatten
      |rejectattr('values', 'callable')|map(attribute='values')|flatten
      |select('match', '^(?!CREATE).*') |list
      if ansible_influx_cqs.json.results is defined else [] }}"

- name: Setup databases
  include_tasks: influxdb_database.yml # no longer supported: database={{ db_item }}
  with_items: "{{ ansible_influx_databases|sort }}"
  vars:
    database: "{{ db_item }}"
  loop_control: { loop_var: db_item }

- name: Total duration
  debug: msg="Total duration (all levels) = {{ (lookup('pipe', 'date +%s')|int - ifx_start|int)/60 }} minutes"
